let isCardAnimationRunning,gameCardsArray,gameStateArray;const compareCardArray=[],generateCardsArray=a=>{const r=Array(a).fill(null).map(((a,r)=>Math.floor(r/2)));for(let a=r.length-1;a>0;a--){const e=Math.floor(Math.random()*(a+1));[r[a],r[e]]=[r[e],r[a]]}return r},handleCardClick=a=>{if(isCardAnimationRunning||compareCardArray.length>1)return;const r=+a.target.closest(".card").getAttribute("data-id");compareCardArray.includes(r)||gameStateArray[r]||(flipCard(r),compareCardArray.push(r),compareCardArray.length>1&&(gameCardsArray[compareCardArray[0]]===gameCardsArray[compareCardArray[1]]?(gameStateArray[compareCardArray[0]]=gameStateArray[compareCardArray[1]]=!0,compareCardArray.length=0,checkGameState()):(isCardAnimationRunning=!0,shakeCard(compareCardArray[0]),shakeCard(compareCardArray[1]),setTimeout((()=>{flipCard(compareCardArray[0]),flipCard(compareCardArray[1]),compareCardArray.length=0,isCardAnimationRunning=!1}),1200))))},checkGameState=()=>{gameStateArray.every((a=>a))&&setTimeout((()=>alert("You win!")),600)},shakeCard=a=>{setTimeout((()=>document.querySelector(`[data-id='${a}']`).classList.add("card--shaked")),600),setTimeout((()=>document.querySelector(`[data-id='${a}']`).classList.remove("card--shaked")),1200)},flipCard=a=>{const r=document.querySelector(`[data-id='${a}']`);r.classList.contains("card--selected")?(r.classList.remove("card--selected"),r.querySelector(".card-back").classList.remove(`card--${gameCardsArray[a]}`)):(r.classList.add("card--selected"),r.querySelector(".card-back").classList.add(`card--${gameCardsArray[a]}`))},drawBoardGame=a=>{let r=0;for(;r<a;){const a=document.createElement("div");a.classList.add("card-front");const e=document.createElement("div");e.classList.add("card-back");const d=document.createElement("div");d.classList.add("card-inner"),d.appendChild(a),d.appendChild(e);const t=document.createElement("div");t.classList.add("card"),t.setAttribute("data-id",r),t.addEventListener("click",handleCardClick),t.appendChild(d),document.querySelector(".scene").appendChild(t),r++}},startGame=()=>{gameCardsArray.forEach(((a,r)=>flipCard(r))),isCardAnimationRunning=!0,setTimeout((()=>{gameCardsArray.forEach(((a,r)=>flipCard(r))),isCardAnimationRunning=!1}),2e3)},loadGame=a=>{gameCardsArray=generateCardsArray(2*a),gameStateArray=new Array(2*a).fill(!1),drawBoardGame(2*a)};loadGame(8),gameCardsArray.forEach(((a,r)=>flipCard(r))),isCardAnimationRunning=!0,setTimeout((()=>{gameCardsArray.forEach(((a,r)=>flipCard(r))),isCardAnimationRunning=!1}),2e3);
//# sourceMappingURL=index.ea84c93f.js.map
